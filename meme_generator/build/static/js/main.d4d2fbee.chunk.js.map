{"version":3,"sources":["components/template.jsx","components/meme.jsx","App.jsx","index.js"],"names":["Template","templates","setMeme","className","map","template","style","backgroundImage","url","onClick","id","Meme","meme","useState","template_id","username","password","boxes","form","setForm","src","alt","Array","box_count","_","index","placeholder","type","onChange","e","newBoxes","text","target","value","console","log","box","fetch","then","res","json","d","success","data","App","setTemplates","useEffect","memes","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLA0BeA,EAtBE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAUC,EAAa,EAAbA,QAGzB,OACI,iCACA,qBAAKC,UAAU,OAAf,SAEQF,EAAUG,KAAI,SAAAC,GAAQ,OAGlB,qBAAKC,MAAO,CAACC,gBAAgB,QAAD,OAASF,EAASG,IAAlB,OAA4BL,UAAU,WAAWM,QAAS,kBAAIP,EAAQG,KAAgBA,EAASK,Y,cCmChIC,EA/CF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKV,EAAa,EAAbA,QAChB,EAAoBW,mBAAS,CACzBC,YAAYF,EAAKF,GACjBK,SAAS,aACTC,SAAS,YACTC,MAAM,KAJV,mBAAMC,EAAN,KAAWC,EAAX,KAuBA,OAEI,sBAAKhB,UAAU,OAAf,UACI,qBAAKiB,IAAKR,EAAKJ,IAAKa,IAAI,QACxB,qBAAKlB,UAAU,MAAf,SAEK,YAAImB,MAAMV,EAAKW,YAAYnB,KAAI,SAACoB,EAAEC,GAAH,OAC5B,uBAAOC,YAAW,oBAAeD,EAAM,GAAKE,KAAK,OAAmBC,SAAU,SAACC,GAC3E,IAAMC,EAASZ,EAAKD,MACpBa,EAASL,GAAO,CAACM,KAAKF,EAAEG,OAAOC,OAC/Bd,EAAQ,2BAAID,GAAL,IAAUD,MAAMa,OAHkCL,QAQrE,sBAAKtB,UAAU,MAAf,UACJ,wBAAQM,QAjChB,WACIyB,QAAQC,IAAIjB,EAAKD,OACjB,IAAIT,EAAG,4DAAwDU,EAAKJ,YAA7D,qBAAqFI,EAAKH,SAA1F,qBAA+GG,EAAKF,UAC3HE,EAAKD,MAAMb,KAAI,SAACgC,EAAIX,GAChBjB,GAAK,UAAF,OAAYiB,EAAZ,mBAA4BW,EAAIL,SAEvCG,QAAQC,IAAI3B,GACZ6B,MAAM7B,GACL8B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACCA,EAAEC,SACDxC,EAAQ,2BAAIU,GAAL,IAAUJ,IAAIiC,EAAEE,KAAKnC,WAsBPL,UAAU,SAAnC,yBACA,wBAAQM,QApBhB,WACIP,EAAQ,OAmBqBC,UAAU,SAAnC,oCCTOyC,MA5Bf,WAEE,MAA+B/B,mBAAS,IAAxC,mBAAOZ,EAAP,KAAiB4C,EAAjB,KACA,EAAoBhC,mBAAS,MAA7B,mBAAMD,EAAN,KAAWV,EAAX,KAYA,OAVA4C,qBAAU,WACRT,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACG,GACLP,QAAQC,IAAIM,EAAEE,KAAKI,OACnBF,EAAaJ,EAAEE,KAAKI,UAErBC,MAAMd,QAAQC,IAAI,aACnB,IAGA,sBAAKhC,UAAU,MAAf,UACE,iCAAQ,kDAEA,MAANS,EAAW,cAAC,EAAD,CAAUX,UAAWA,EAAWC,QAASA,IAAY,cAAC,EAAD,CAAMU,KAAMA,EAAMV,QAASA,QCrBnG+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d4d2fbee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css'\r\nimport { useState } from \"react\";\r\n\r\nconst Template = ({templates,setMeme}) => {\r\n   \r\n\r\n    return (\r\n        <center>\r\n        <div className=\"cont\">     \r\n            {           \r\n                templates.map(template=>(\r\n                   \r\n                \r\n                    <div style={{backgroundImage:`url('${template.url}')`}} className=\"template\" onClick={()=>setMeme(template)} key={template.id}>\r\n                     \r\n                    </div>\r\n                \r\n                )\r\n                )\r\n            }\r\n        </div>\r\n            </center>\r\n    );\r\n}\r\n \r\nexport default Template;","import { useState } from \"react\";\r\n\r\nconst Meme = ({meme,setMeme}) => {\r\n    const[form,setForm]=useState({\r\n        template_id:meme.id,\r\n        username:\"ASHFLEMING\",\r\n        password:\"samriddhi\",\r\n        boxes:[]\r\n    })\r\nfunction create(){\r\n    console.log(form.boxes);\r\n    let url = `https://api.imgflip.com/caption_image?template_id=${form.template_id}&username=${form.username}&password=${form.password}`\r\n    form.boxes.map((box,index)=>{\r\n        url+=`&boxes[${index}][text]=${box.text}`\r\n    })\r\n    console.log(url);\r\n    fetch(url)\r\n    .then(res=>res.json())\r\n    .then(d=>{\r\n        if(d.success)\r\n            setMeme({...meme,url:d.data.url})\r\n    })\r\n}\r\nfunction choose(){\r\n    setMeme(null);\r\n}\r\n    return ( \r\n       \r\n        <div className=\"meme\">\r\n            <img src={meme.url} alt=\"aai\" />\r\n            <div className=\"box\">\r\n            {\r\n                 [...Array(meme.box_count)].map((_,index)=>(\r\n                    <input placeholder={`Meme Text ${index+1}`} type=\"text\" key={index} onChange={(e)=>{\r\n                        const newBoxes=form.boxes;\r\n                        newBoxes[index]={text:e.target.value}\r\n                        setForm({...form,boxes:newBoxes})\r\n                    }}/>\r\n                ))\r\n            }\r\n            </div>\r\n            <div className=\"div\">\r\n        <button onClick={create} className=\"create\">Create Meme</button>\r\n        <button onClick={choose} className=\"choose\">Choose Template</button>\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Meme;","import './App.css';\nimport React from 'react';\nimport {useState,useEffect} from 'react'\nimport Template from './components/template';\nimport Meme from './components/meme';\n\nfunction App() {\n\n  const [templates,setTemplates]=useState([]);\n  const[meme,setMeme]=useState(null);\n\n  useEffect(()=>{\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(res=>res.json())\n    .then((d)=>{\n      console.log(d.data.memes);\n      setTemplates(d.data.memes)\n    })\n    .catch(console.log(\"error!\"))\n  },[])\n\n  return (\n    <div className=\"App\">\n      <center><h1>Meme Generator</h1></center>\n      {\n        meme==null?<Template templates={templates} setMeme={setMeme} />:<Meme meme={meme} setMeme={setMeme}/>\n      }\n     \n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}