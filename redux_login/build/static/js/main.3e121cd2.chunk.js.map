{"version":3,"sources":["App.js","actions/index.js","reducers/updatinguser.js","reducers/updatingemail.js","reducers/index.js","store.js","index.js"],"names":["App","user","useSelector","state","mail","email","dispatch","useDispatch","className","TextField","id","label","variant","onChange","e","type","name","target","value","Updatinguser","action","Updatingemail","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMA2BeA,MAtBf,WACE,IAAMC,EAAKC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QAC9BG,EAAKF,aAAY,SAAAC,GAAK,OAAEA,EAAME,SAC9BC,EAAWC,cACjB,OACE,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACQ,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBF,UAAU,QAAQG,MAAM,WAAWC,QAAQ,WAAWC,SAAU,SAACC,GAC5FR,ECZT,CACHS,KAAK,iBACLC,KDUoCF,EAAEG,OAAOC,WAErC,cAACT,EAAA,EAAD,CAAWC,GAAG,WAAWC,MAAM,QAAQH,UAAU,QAAQI,QAAQ,WAAWC,SAAU,SAACC,GACnFR,ECTT,CACHS,KAAK,cACLV,MDOiCS,EAAEG,OAAOC,WAElC,sBAAKV,UAAU,OAAf,UACA,4CAAeP,KACf,yCAAYG,cEZbe,EARM,WAAuB,IAAtBhB,EAAqB,uDAAf,IAAIiB,EAAW,uCACvC,MAAiB,mBAAdA,EAAOL,KACCK,EAAOJ,KAEXb,GCEIkB,EANO,WAAuB,IAAtBlB,EAAqB,uDAAf,IAAIiB,EAAW,uCACxC,MAAiB,gBAAdA,EAAOL,KACCK,EAAOf,MAEXF,G,QCIImB,EAJGC,YAAgB,CAC9BtB,KAAKkB,EACLd,MAAMgB,ICDKG,EADDC,YAAYH,GCE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.3e121cd2.chunk.js","sourcesContent":["import {TextField} from '@material-ui/core';\nimport {updateUsername,updateEmail} from './actions/index'\nimport { useSelector,useDispatch } from 'react-redux';\nimport './App.css';\n\nfunction App() {\n  const user=useSelector(state=>state.user);\n  const mail=useSelector(state=>state.email);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n        <div className=\"container\">\n                <TextField id=\"outlined-basic\" className=\"input\" label=\"Username\" variant=\"outlined\" onChange={(e)=>{\n                    dispatch(updateUsername(e.target.value));\n                }}/>\n                <TextField id=\"outlined\" label=\"Email\" className=\"input\" variant=\"outlined\" onChange={(e)=>{\n                    dispatch(updateEmail(e.target.value));\n                }}/>\n                <div className=\"data\">\n                <h2>Username: {user}</h2>\n                <h2>Email: {mail}</h2>\n                </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const updateUsername = (x) => {\r\n    return {\r\n        type:\"updateUsername\",\r\n        name:x,\r\n    };\r\n}\r\nconst updateEmail = (x) => {\r\n    return {\r\n        type:\"updateEmail\",\r\n        email:x,\r\n    };\r\n}\r\n \r\nexport {updateUsername,updateEmail};","const Updatinguser = (state=\" \",action) => {\r\n    if(action.type===\"updateUsername\"){\r\n        return action.name;\r\n    }\r\n    return state;\r\n}\r\n\r\n \r\nexport default Updatinguser;","const Updatingemail = (state=\" \",action) => {\r\n    if(action.type===\"updateEmail\"){\r\n        return action.email;\r\n    }\r\n    return state;\r\n}\r\nexport default Updatingemail;","import Updatinguser from \"./updatinguser\";\r\nimport Updatingemail from \"./updatingemail\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer=combineReducers({\r\n    user:Updatinguser,\r\n    email:Updatingemail,\r\n})\r\nexport default rootReducer;","\r\nimport rootReducer from \"./reducers\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store'\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n      <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}