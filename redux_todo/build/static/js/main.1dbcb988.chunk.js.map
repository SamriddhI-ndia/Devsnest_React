{"version":3,"sources":["components/addTodo.jsx","actions/index.js","components/listTodo.jsx","App.js","reducers/updateTodo.jsx","reducers/index.js","store.js","index.js"],"names":["AddTodo","useState","item","setItem","dispatch","useDispatch","className","TextField","id","label","variant","placeholder","value","onChange","e","target","Button","color","onClick","type","payload","addItem","ListTodo","todos","useSelector","state","update","map","todo","index","removeItem","App","UpdateTodo","action","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA6BeA,EAxBC,WACZ,MAAqBC,mBAAS,KAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACOC,EAAWC,cAClB,OACI,sBAAKC,UAAU,MAAf,UACI,cAACC,EAAA,EAAD,CACAC,GAAG,iBACHF,UAAU,QACVG,MAAM,OACNC,QAAQ,WACRC,YAAY,WACZC,MAAOV,EACPW,SAAU,SAACC,GACPX,EAAQW,EAAEC,OAAOH,UAGrB,cAACI,EAAA,EAAD,CAAQN,QAAQ,WAAWO,MAAM,UAAUX,UAAU,MAAMY,QAAS,WAChEd,ECtBA,SAACF,GACb,MAAO,CACHiB,KAAK,WACLC,QAAQlB,GDmBSmB,CAAQnB,IACjBC,EAAQ,KAFZ,qBEIGmB,EApBE,WACb,IAAMC,EAAMC,aAAY,SAACC,GAAD,OAASA,EAAMC,UACjCtB,EAAWC,cACjB,OACI,qBAAKC,UAAU,OAAf,SAEQiB,EAAMI,KAAI,SAACC,EAAKC,GAAN,OACN,sBAAKvB,UAAU,OAAf,UACI,6BAAKsB,IAEN,cAACZ,EAAA,EAAD,CAAQV,UAAU,SAASI,QAAQ,WAAWO,MAAM,YAAYC,QAAS,kBAAId,EDTjF,SAACyB,GAChB,MAAO,CACHV,KAAK,cACLC,QAAQS,GCM6FC,CAAWD,KAAjG,6BCFRE,MATf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,gBCES0B,EAVI,WAAsB,IAArBP,EAAoB,uDAAd,GAAGQ,EAAW,uCACpC,MAAiB,aAAdA,EAAOd,KACA,GAAN,mBAAWM,GAAX,CAAiBQ,EAAOb,UAEN,gBAAda,EAAOd,KACJM,EAAMS,QAAO,SAAChC,EAAK2B,GAAN,OAAcA,IAAQI,EAAOb,WAE9CK,GCDIU,EAHGC,YAAgB,CAC9BV,OAAOM,ICDIK,EADHC,YAAYH,GCIxBI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACA,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.1dbcb988.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem} from '../actions/index'\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst AddTodo = () => {\r\n    const [item,setItem]=useState(\" \");\r\n     const dispatch = useDispatch();\r\n    return ( \r\n        <div className=\"add\">\r\n            <TextField \r\n            id=\"outlined-basic\" \r\n            className=\"input\"\r\n            label=\"Item\" \r\n            variant=\"outlined\" \r\n            placeholder=\"Add Item\"\r\n            value={item}\r\n            onChange={(e)=>{\r\n                setItem(e.target.value);\r\n            }}\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" className=\"add\" onClick={()=>{\r\n                dispatch(addItem(item))\r\n                setItem(\"\");\r\n                }}>Add</Button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AddTodo;","const addItem = (item) => {\r\n    return {\r\n        type:\"Add_item\",\r\n        payload:item,\r\n    }\r\n}\r\nconst removeItem = (index) => {\r\n    return {\r\n        type:\"Remove_item\",\r\n        payload:index,\r\n    }\r\n}\r\nexport { addItem,removeItem};","import { useDispatch,useSelector } from \"react-redux\";\r\nimport { removeItem } from \"../actions\";\r\nimport React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ListTodo = () => {\r\n    const todos=useSelector((state)=>state.update);\r\n    const dispatch = useDispatch();\r\n    return ( \r\n        <div className=\"list\">\r\n            {\r\n                todos.map((todo,index)=>(\r\n                    <div className=\"item\">\r\n                        <h3>{todo}</h3>\r\n                        \r\n                       <Button className=\"delete\" variant=\"outlined\" color=\"secondary\" onClick={()=>dispatch(removeItem(index))}>Delete</Button>\r\n                        \r\n                    </div>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ListTodo;","import './App.css';\nimport AddTodo from './components/addTodo';\nimport ListTodo from './components/listTodo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddTodo/>\n      <ListTodo/>\n    </div>\n  );\n}\n\nexport default App;\n","const UpdateTodo = (state=[],action) => {\r\n    if(action.type===\"Add_item\"){\r\n        return [...state,action.payload];\r\n    }\r\n    else if(action.type===\"Remove_item\"){\r\n        return state.filter((item,index)=>index!==action.payload);\r\n    }\r\n    return state;\r\n}\r\n \r\nexport default UpdateTodo;","import {combineReducers} from 'redux'\r\nimport UpdateTodo from './updateTodo'\r\n\r\nconst rootReducer=combineReducers({\r\n    update:UpdateTodo,\r\n})\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nconst store=createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}